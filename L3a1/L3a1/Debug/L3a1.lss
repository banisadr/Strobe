
L3a1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000068e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000063a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000068e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000101  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000b7  00000000  00000000  00000839  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000107  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  000009f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000179  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000016a  00000000  00000000  00000c19  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00000d83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_29>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
  bc:	0c 94 1b 03 	jmp	0x636	; 0x636 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <init>:
    }
}

void init(void){ // used to set pins to proper state
	
	set(DDRB,6); // Set B6 to output
  c4:	26 9a       	sbi	0x04, 6	; 4
	
	clear(DDRD,2); // Set D2-5 to input
  c6:	52 98       	cbi	0x0a, 2	; 10
	clear(DDRD,3);
  c8:	53 98       	cbi	0x0a, 3	; 10
	clear(DDRD,4);
  ca:	54 98       	cbi	0x0a, 4	; 10
	clear(DDRD,5);
  cc:	55 98       	cbi	0x0a, 5	; 10
	
	set(PORTD,2); // Enable internal pullup resistors
  ce:	5a 9a       	sbi	0x0b, 2	; 11
	set(PORTD,3);
  d0:	5b 9a       	sbi	0x0b, 3	; 11
	set(PORTD,4);
  d2:	5c 9a       	sbi	0x0b, 4	; 11
	set(PORTD,5);
  d4:	5d 9a       	sbi	0x0b, 5	; 11
	
	m_clockdivide(4); // Set to 1 MHz
  d6:	e1 e6       	ldi	r30, 0x61	; 97
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 e8       	ldi	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
  de:	84 e0       	ldi	r24, 0x04	; 4
  e0:	80 83       	st	Z, r24

	OCR1A = 0x7A76; // Set OCR1A to 16
  e2:	e8 e8       	ldi	r30, 0x88	; 136
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	86 e7       	ldi	r24, 0x76	; 118
  e8:	9a e7       	ldi	r25, 0x7A	; 122
  ea:	91 83       	std	Z+1, r25	; 0x01
  ec:	80 83       	st	Z, r24
	OCR1B = OCR1A/2; // Set OCR1B to half OCR1B
  ee:	80 81       	ld	r24, Z
  f0:	91 81       	ldd	r25, Z+1	; 0x01
  f2:	96 95       	lsr	r25
  f4:	87 95       	ror	r24
  f6:	90 93 8b 00 	sts	0x008B, r25
  fa:	80 93 8a 00 	sts	0x008A, r24
	
	set(TCCR1B,WGM13); // Set timer mode to mode 15: up to OCR1A, PWM mode
  fe:	e1 e8       	ldi	r30, 0x81	; 129
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	80 61       	ori	r24, 0x10	; 16
 106:	80 83       	st	Z, r24
	set(TCCR1B,WGM12);
 108:	80 81       	ld	r24, Z
 10a:	88 60       	ori	r24, 0x08	; 8
 10c:	80 83       	st	Z, r24
	set(TCCR1A,WGM11);
 10e:	a0 e8       	ldi	r26, 0x80	; 128
 110:	b0 e0       	ldi	r27, 0x00	; 0
 112:	8c 91       	ld	r24, X
 114:	82 60       	ori	r24, 0x02	; 2
 116:	8c 93       	st	X, r24
	set(TCCR1A,WGM10);
 118:	8c 91       	ld	r24, X
 11a:	81 60       	ori	r24, 0x01	; 1
 11c:	8c 93       	st	X, r24
	
	set(TCCR1A,COM1B1); // clear B6 at TCNT1 = OCR1B, set B6 at rollover
 11e:	8c 91       	ld	r24, X
 120:	80 62       	ori	r24, 0x20	; 32
 122:	8c 93       	st	X, r24
	clear(TCCR1A,COM1B0);
 124:	8c 91       	ld	r24, X
 126:	8f 7e       	andi	r24, 0xEF	; 239
 128:	8c 93       	st	X, r24
	
	clear(TCCR1B,CS12); // Set prescaler to /64
 12a:	80 81       	ld	r24, Z
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	80 83       	st	Z, r24
	set(TCCR1B,CS11);
 130:	80 81       	ld	r24, Z
 132:	82 60       	ori	r24, 0x02	; 2
 134:	80 83       	st	Z, r24
	set(TCCR1B,CS10);
 136:	80 81       	ld	r24, Z
 138:	81 60       	ori	r24, 0x01	; 1
 13a:	80 83       	st	Z, r24
 13c:	08 95       	ret

0000013e <adc_start>:
	
}

void adc_start(void){
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
	
	clear(ADMUX,REFS1); // Set reference voltage to Vcc
 142:	ac e7       	ldi	r26, 0x7C	; 124
 144:	b0 e0       	ldi	r27, 0x00	; 0
 146:	8c 91       	ld	r24, X
 148:	8f 77       	andi	r24, 0x7F	; 127
 14a:	8c 93       	st	X, r24
	set(ADMUX,REFS0);
 14c:	8c 91       	ld	r24, X
 14e:	80 64       	ori	r24, 0x40	; 64
 150:	8c 93       	st	X, r24
	
	clear(ADCSRA,ADPS2); // Set prescaler to /8
 152:	ea e7       	ldi	r30, 0x7A	; 122
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	8b 7f       	andi	r24, 0xFB	; 251
 15a:	80 83       	st	Z, r24
	set(ADCSRA,ADPS1);
 15c:	80 81       	ld	r24, Z
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	80 83       	st	Z, r24
	set(ADCSRA,ADPS0);
 162:	80 81       	ld	r24, Z
 164:	81 60       	ori	r24, 0x01	; 1
 166:	80 83       	st	Z, r24
	
	set(DIDR0,ADC0D); // Disable Digital input to ADC0
 168:	ce e7       	ldi	r28, 0x7E	; 126
 16a:	d0 e0       	ldi	r29, 0x00	; 0
 16c:	88 81       	ld	r24, Y
 16e:	81 60       	ori	r24, 0x01	; 1
 170:	88 83       	st	Y, r24
	
	sei(); // Enable global interrupts
 172:	78 94       	sei
	
	set(ADCSRA,ADIE); // Enable interrupt for when conversion is finished
 174:	80 81       	ld	r24, Z
 176:	88 60       	ori	r24, 0x08	; 8
 178:	80 83       	st	Z, r24
	
	clear(ADCSRA,ADATE); // Set triggering to 'free-running' mode
 17a:	80 81       	ld	r24, Z
 17c:	8f 7d       	andi	r24, 0xDF	; 223
 17e:	80 83       	st	Z, r24
	
	clear(ADCSRB,MUX5); // Select ADC0 at pin F0
 180:	cb e7       	ldi	r28, 0x7B	; 123
 182:	d0 e0       	ldi	r29, 0x00	; 0
 184:	88 81       	ld	r24, Y
 186:	8f 7d       	andi	r24, 0xDF	; 223
 188:	88 83       	st	Y, r24
	clear(ADMUX,MUX2);
 18a:	8c 91       	ld	r24, X
 18c:	8b 7f       	andi	r24, 0xFB	; 251
 18e:	8c 93       	st	X, r24
	clear(ADMUX,MUX1);
 190:	8c 91       	ld	r24, X
 192:	8d 7f       	andi	r24, 0xFD	; 253
 194:	8c 93       	st	X, r24
	clear(ADMUX,MUX0);
 196:	8c 91       	ld	r24, X
 198:	8e 7f       	andi	r24, 0xFE	; 254
 19a:	8c 93       	st	X, r24
	
	set(ADCSRA,ADEN); // Enable ADC subsystem
 19c:	80 81       	ld	r24, Z
 19e:	80 68       	ori	r24, 0x80	; 128
 1a0:	80 83       	st	Z, r24
	
	set(ADCSRA,ADSC); // Begin first conversion
 1a2:	80 81       	ld	r24, Z
 1a4:	80 64       	ori	r24, 0x40	; 64
 1a6:	80 83       	st	Z, r24
}
 1a8:	df 91       	pop	r29
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <main>:
void init(void); // Prototype functions
void adc_start(void);

int main(void)
{
	init();
 1ae:	0e 94 62 00 	call	0xc4	; 0xc4 <init>
	adc_start();
 1b2:	0e 94 9f 00 	call	0x13e	; 0x13e <adc_start>
	m_red(ON);
 1b6:	6e 9a       	sbi	0x0d, 6	; 13
 1b8:	76 98       	cbi	0x0e, 6	; 14
	float cycle;
    while (1) 
    {
		cycle = 1;
 1ba:	21 2c       	mov	r2, r1
 1bc:	31 2c       	mov	r3, r1
		if(check(PIND,2)){
			cycle += 1;
 1be:	61 2c       	mov	r6, r1
 1c0:	51 2c       	mov	r5, r1
 1c2:	41 2c       	mov	r4, r1
 1c4:	68 94       	set
 1c6:	77 24       	eor	r7, r7
 1c8:	76 f8       	bld	r7, 6
			cycle += 4;
		}
		if(check(PIND,5)){
			cycle += 8;
		}
	OCR1B = OCR1A*(cycle/16);
 1ca:	0f 2e       	mov	r0, r31
 1cc:	f8 e8       	ldi	r31, 0x88	; 136
 1ce:	ef 2e       	mov	r14, r31
 1d0:	f1 2c       	mov	r15, r1
 1d2:	f0 2d       	mov	r31, r0
 1d4:	0f 2e       	mov	r0, r31
 1d6:	fa e8       	ldi	r31, 0x8A	; 138
 1d8:	cf 2e       	mov	r12, r31
 1da:	d1 2c       	mov	r13, r1
 1dc:	f0 2d       	mov	r31, r0
	m_red(ON);
	float cycle;
    while (1) 
    {
		cycle = 1;
		if(check(PIND,2)){
 1de:	4a 9b       	sbis	0x09, 2	; 9
 1e0:	05 c0       	rjmp	.+10     	; 0x1ec <main+0x3e>
			cycle += 1;
 1e2:	d6 2d       	mov	r29, r6
 1e4:	c5 2d       	mov	r28, r5
 1e6:	14 2d       	mov	r17, r4
 1e8:	07 2d       	mov	r16, r7
 1ea:	04 c0       	rjmp	.+8      	; 0x1f4 <main+0x46>
	adc_start();
	m_red(ON);
	float cycle;
    while (1) 
    {
		cycle = 1;
 1ec:	d2 2d       	mov	r29, r2
 1ee:	c3 2d       	mov	r28, r3
 1f0:	10 e8       	ldi	r17, 0x80	; 128
 1f2:	0f e3       	ldi	r16, 0x3F	; 63
		if(check(PIND,2)){
			cycle += 1;
		}
		if(check(PIND,3)){
 1f4:	4b 9b       	sbis	0x09, 3	; 9
 1f6:	0e c0       	rjmp	.+28     	; 0x214 <main+0x66>
			cycle += 2;
 1f8:	26 2d       	mov	r18, r6
 1fa:	35 2d       	mov	r19, r5
 1fc:	44 2d       	mov	r20, r4
 1fe:	57 2d       	mov	r21, r7
 200:	6d 2f       	mov	r22, r29
 202:	7c 2f       	mov	r23, r28
 204:	81 2f       	mov	r24, r17
 206:	90 2f       	mov	r25, r16
 208:	0e 94 85 01 	call	0x30a	; 0x30a <__addsf3>
 20c:	d6 2f       	mov	r29, r22
 20e:	c7 2f       	mov	r28, r23
 210:	18 2f       	mov	r17, r24
 212:	09 2f       	mov	r16, r25
		}
		if(check(PIND,4)){
 214:	4c 9b       	sbis	0x09, 4	; 9
 216:	0e c0       	rjmp	.+28     	; 0x234 <main+0x86>
			cycle += 4;
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	40 e8       	ldi	r20, 0x80	; 128
 21e:	50 e4       	ldi	r21, 0x40	; 64
 220:	6d 2f       	mov	r22, r29
 222:	7c 2f       	mov	r23, r28
 224:	81 2f       	mov	r24, r17
 226:	90 2f       	mov	r25, r16
 228:	0e 94 85 01 	call	0x30a	; 0x30a <__addsf3>
 22c:	d6 2f       	mov	r29, r22
 22e:	c7 2f       	mov	r28, r23
 230:	18 2f       	mov	r17, r24
 232:	09 2f       	mov	r16, r25
		}
		if(check(PIND,5)){
 234:	4d 9b       	sbis	0x09, 5	; 9
 236:	0e c0       	rjmp	.+28     	; 0x254 <main+0xa6>
			cycle += 8;
 238:	20 e0       	ldi	r18, 0x00	; 0
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	40 e0       	ldi	r20, 0x00	; 0
 23e:	51 e4       	ldi	r21, 0x41	; 65
 240:	6d 2f       	mov	r22, r29
 242:	7c 2f       	mov	r23, r28
 244:	81 2f       	mov	r24, r17
 246:	90 2f       	mov	r25, r16
 248:	0e 94 85 01 	call	0x30a	; 0x30a <__addsf3>
 24c:	d6 2f       	mov	r29, r22
 24e:	c7 2f       	mov	r28, r23
 250:	18 2f       	mov	r17, r24
 252:	09 2f       	mov	r16, r25
		}
	OCR1B = OCR1A*(cycle/16);
 254:	f7 01       	movw	r30, r14
 256:	60 81       	ld	r22, Z
 258:	71 81       	ldd	r23, Z+1	; 0x01
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 20 02 	call	0x440	; 0x440 <__floatunsisf>
 262:	4b 01       	movw	r8, r22
 264:	5c 01       	movw	r10, r24
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	40 e8       	ldi	r20, 0x80	; 128
 26c:	5d e3       	ldi	r21, 0x3D	; 61
 26e:	6d 2f       	mov	r22, r29
 270:	7c 2f       	mov	r23, r28
 272:	81 2f       	mov	r24, r17
 274:	90 2f       	mov	r25, r16
 276:	0e 94 ae 02 	call	0x55c	; 0x55c <__mulsf3>
 27a:	9b 01       	movw	r18, r22
 27c:	ac 01       	movw	r20, r24
 27e:	c5 01       	movw	r24, r10
 280:	b4 01       	movw	r22, r8
 282:	0e 94 ae 02 	call	0x55c	; 0x55c <__mulsf3>
 286:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 28a:	f6 01       	movw	r30, r12
 28c:	71 83       	std	Z+1, r23	; 0x01
 28e:	60 83       	st	Z, r22
    }
 290:	a6 cf       	rjmp	.-180    	; 0x1de <main+0x30>

00000292 <__vector_29>:
	set(ADCSRA,ADEN); // Enable ADC subsystem
	
	set(ADCSRA,ADSC); // Begin first conversion
}

ISR(ADC_vect){
 292:	1f 92       	push	r1
 294:	0f 92       	push	r0
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	0f 92       	push	r0
 29a:	11 24       	eor	r1, r1
 29c:	2f 93       	push	r18
 29e:	3f 93       	push	r19
 2a0:	4f 93       	push	r20
 2a2:	5f 93       	push	r21
 2a4:	6f 93       	push	r22
 2a6:	7f 93       	push	r23
 2a8:	8f 93       	push	r24
 2aa:	9f 93       	push	r25
 2ac:	af 93       	push	r26
 2ae:	bf 93       	push	r27
 2b0:	ef 93       	push	r30
 2b2:	ff 93       	push	r31
	OCR1A = 0x7A76/1023.0*ADC;
 2b4:	60 91 78 00 	lds	r22, 0x0078
 2b8:	70 91 79 00 	lds	r23, 0x0079
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 20 02 	call	0x440	; 0x440 <__floatunsisf>
 2c4:	2a e4       	ldi	r18, 0x4A	; 74
 2c6:	39 e2       	ldi	r19, 0x29	; 41
 2c8:	45 ef       	ldi	r20, 0xF5	; 245
 2ca:	51 e4       	ldi	r21, 0x41	; 65
 2cc:	0e 94 ae 02 	call	0x55c	; 0x55c <__mulsf3>
 2d0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 2d4:	70 93 89 00 	sts	0x0089, r23
 2d8:	60 93 88 00 	sts	0x0088, r22
	set(ADCSRA,ADSC); // Begin conversion
 2dc:	ea e7       	ldi	r30, 0x7A	; 122
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	80 81       	ld	r24, Z
 2e2:	80 64       	ori	r24, 0x40	; 64
 2e4:	80 83       	st	Z, r24
 2e6:	ff 91       	pop	r31
 2e8:	ef 91       	pop	r30
 2ea:	bf 91       	pop	r27
 2ec:	af 91       	pop	r26
 2ee:	9f 91       	pop	r25
 2f0:	8f 91       	pop	r24
 2f2:	7f 91       	pop	r23
 2f4:	6f 91       	pop	r22
 2f6:	5f 91       	pop	r21
 2f8:	4f 91       	pop	r20
 2fa:	3f 91       	pop	r19
 2fc:	2f 91       	pop	r18
 2fe:	0f 90       	pop	r0
 300:	0f be       	out	0x3f, r0	; 63
 302:	0f 90       	pop	r0
 304:	1f 90       	pop	r1
 306:	18 95       	reti

00000308 <__subsf3>:
 308:	50 58       	subi	r21, 0x80	; 128

0000030a <__addsf3>:
 30a:	bb 27       	eor	r27, r27
 30c:	aa 27       	eor	r26, r26
 30e:	0e 94 9c 01 	call	0x338	; 0x338 <__addsf3x>
 312:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_round>
 316:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fp_pscA>
 31a:	38 f0       	brcs	.+14     	; 0x32a <__addsf3+0x20>
 31c:	0e 94 6d 02 	call	0x4da	; 0x4da <__fp_pscB>
 320:	20 f0       	brcs	.+8      	; 0x32a <__addsf3+0x20>
 322:	39 f4       	brne	.+14     	; 0x332 <__addsf3+0x28>
 324:	9f 3f       	cpi	r25, 0xFF	; 255
 326:	19 f4       	brne	.+6      	; 0x32e <__addsf3+0x24>
 328:	26 f4       	brtc	.+8      	; 0x332 <__addsf3+0x28>
 32a:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_nan>
 32e:	0e f4       	brtc	.+2      	; 0x332 <__addsf3+0x28>
 330:	e0 95       	com	r30
 332:	e7 fb       	bst	r30, 7
 334:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_inf>

00000338 <__addsf3x>:
 338:	e9 2f       	mov	r30, r25
 33a:	0e 94 85 02 	call	0x50a	; 0x50a <__fp_split3>
 33e:	58 f3       	brcs	.-42     	; 0x316 <__addsf3+0xc>
 340:	ba 17       	cp	r27, r26
 342:	62 07       	cpc	r22, r18
 344:	73 07       	cpc	r23, r19
 346:	84 07       	cpc	r24, r20
 348:	95 07       	cpc	r25, r21
 34a:	20 f0       	brcs	.+8      	; 0x354 <__addsf3x+0x1c>
 34c:	79 f4       	brne	.+30     	; 0x36c <__addsf3x+0x34>
 34e:	a6 f5       	brtc	.+104    	; 0x3b8 <__addsf3x+0x80>
 350:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_zero>
 354:	0e f4       	brtc	.+2      	; 0x358 <__addsf3x+0x20>
 356:	e0 95       	com	r30
 358:	0b 2e       	mov	r0, r27
 35a:	ba 2f       	mov	r27, r26
 35c:	a0 2d       	mov	r26, r0
 35e:	0b 01       	movw	r0, r22
 360:	b9 01       	movw	r22, r18
 362:	90 01       	movw	r18, r0
 364:	0c 01       	movw	r0, r24
 366:	ca 01       	movw	r24, r20
 368:	a0 01       	movw	r20, r0
 36a:	11 24       	eor	r1, r1
 36c:	ff 27       	eor	r31, r31
 36e:	59 1b       	sub	r21, r25
 370:	99 f0       	breq	.+38     	; 0x398 <__addsf3x+0x60>
 372:	59 3f       	cpi	r21, 0xF9	; 249
 374:	50 f4       	brcc	.+20     	; 0x38a <__addsf3x+0x52>
 376:	50 3e       	cpi	r21, 0xE0	; 224
 378:	68 f1       	brcs	.+90     	; 0x3d4 <__addsf3x+0x9c>
 37a:	1a 16       	cp	r1, r26
 37c:	f0 40       	sbci	r31, 0x00	; 0
 37e:	a2 2f       	mov	r26, r18
 380:	23 2f       	mov	r18, r19
 382:	34 2f       	mov	r19, r20
 384:	44 27       	eor	r20, r20
 386:	58 5f       	subi	r21, 0xF8	; 248
 388:	f3 cf       	rjmp	.-26     	; 0x370 <__addsf3x+0x38>
 38a:	46 95       	lsr	r20
 38c:	37 95       	ror	r19
 38e:	27 95       	ror	r18
 390:	a7 95       	ror	r26
 392:	f0 40       	sbci	r31, 0x00	; 0
 394:	53 95       	inc	r21
 396:	c9 f7       	brne	.-14     	; 0x38a <__addsf3x+0x52>
 398:	7e f4       	brtc	.+30     	; 0x3b8 <__addsf3x+0x80>
 39a:	1f 16       	cp	r1, r31
 39c:	ba 0b       	sbc	r27, r26
 39e:	62 0b       	sbc	r22, r18
 3a0:	73 0b       	sbc	r23, r19
 3a2:	84 0b       	sbc	r24, r20
 3a4:	ba f0       	brmi	.+46     	; 0x3d4 <__addsf3x+0x9c>
 3a6:	91 50       	subi	r25, 0x01	; 1
 3a8:	a1 f0       	breq	.+40     	; 0x3d2 <__addsf3x+0x9a>
 3aa:	ff 0f       	add	r31, r31
 3ac:	bb 1f       	adc	r27, r27
 3ae:	66 1f       	adc	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	c2 f7       	brpl	.-16     	; 0x3a6 <__addsf3x+0x6e>
 3b6:	0e c0       	rjmp	.+28     	; 0x3d4 <__addsf3x+0x9c>
 3b8:	ba 0f       	add	r27, r26
 3ba:	62 1f       	adc	r22, r18
 3bc:	73 1f       	adc	r23, r19
 3be:	84 1f       	adc	r24, r20
 3c0:	48 f4       	brcc	.+18     	; 0x3d4 <__addsf3x+0x9c>
 3c2:	87 95       	ror	r24
 3c4:	77 95       	ror	r23
 3c6:	67 95       	ror	r22
 3c8:	b7 95       	ror	r27
 3ca:	f7 95       	ror	r31
 3cc:	9e 3f       	cpi	r25, 0xFE	; 254
 3ce:	08 f0       	brcs	.+2      	; 0x3d2 <__addsf3x+0x9a>
 3d0:	b0 cf       	rjmp	.-160    	; 0x332 <__addsf3+0x28>
 3d2:	93 95       	inc	r25
 3d4:	88 0f       	add	r24, r24
 3d6:	08 f0       	brcs	.+2      	; 0x3da <__addsf3x+0xa2>
 3d8:	99 27       	eor	r25, r25
 3da:	ee 0f       	add	r30, r30
 3dc:	97 95       	ror	r25
 3de:	87 95       	ror	r24
 3e0:	08 95       	ret

000003e2 <__fixunssfsi>:
 3e2:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_splitA>
 3e6:	88 f0       	brcs	.+34     	; 0x40a <__fixunssfsi+0x28>
 3e8:	9f 57       	subi	r25, 0x7F	; 127
 3ea:	98 f0       	brcs	.+38     	; 0x412 <__fixunssfsi+0x30>
 3ec:	b9 2f       	mov	r27, r25
 3ee:	99 27       	eor	r25, r25
 3f0:	b7 51       	subi	r27, 0x17	; 23
 3f2:	b0 f0       	brcs	.+44     	; 0x420 <__fixunssfsi+0x3e>
 3f4:	e1 f0       	breq	.+56     	; 0x42e <__fixunssfsi+0x4c>
 3f6:	66 0f       	add	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	1a f0       	brmi	.+6      	; 0x406 <__fixunssfsi+0x24>
 400:	ba 95       	dec	r27
 402:	c9 f7       	brne	.-14     	; 0x3f6 <__fixunssfsi+0x14>
 404:	14 c0       	rjmp	.+40     	; 0x42e <__fixunssfsi+0x4c>
 406:	b1 30       	cpi	r27, 0x01	; 1
 408:	91 f0       	breq	.+36     	; 0x42e <__fixunssfsi+0x4c>
 40a:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_zero>
 40e:	b1 e0       	ldi	r27, 0x01	; 1
 410:	08 95       	ret
 412:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_zero>
 416:	67 2f       	mov	r22, r23
 418:	78 2f       	mov	r23, r24
 41a:	88 27       	eor	r24, r24
 41c:	b8 5f       	subi	r27, 0xF8	; 248
 41e:	39 f0       	breq	.+14     	; 0x42e <__fixunssfsi+0x4c>
 420:	b9 3f       	cpi	r27, 0xF9	; 249
 422:	cc f3       	brlt	.-14     	; 0x416 <__fixunssfsi+0x34>
 424:	86 95       	lsr	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b3 95       	inc	r27
 42c:	d9 f7       	brne	.-10     	; 0x424 <__fixunssfsi+0x42>
 42e:	3e f4       	brtc	.+14     	; 0x43e <__fixunssfsi+0x5c>
 430:	90 95       	com	r25
 432:	80 95       	com	r24
 434:	70 95       	com	r23
 436:	61 95       	neg	r22
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	8f 4f       	sbci	r24, 0xFF	; 255
 43c:	9f 4f       	sbci	r25, 0xFF	; 255
 43e:	08 95       	ret

00000440 <__floatunsisf>:
 440:	e8 94       	clt
 442:	09 c0       	rjmp	.+18     	; 0x456 <__floatsisf+0x12>

00000444 <__floatsisf>:
 444:	97 fb       	bst	r25, 7
 446:	3e f4       	brtc	.+14     	; 0x456 <__floatsisf+0x12>
 448:	90 95       	com	r25
 44a:	80 95       	com	r24
 44c:	70 95       	com	r23
 44e:	61 95       	neg	r22
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	8f 4f       	sbci	r24, 0xFF	; 255
 454:	9f 4f       	sbci	r25, 0xFF	; 255
 456:	99 23       	and	r25, r25
 458:	a9 f0       	breq	.+42     	; 0x484 <__floatsisf+0x40>
 45a:	f9 2f       	mov	r31, r25
 45c:	96 e9       	ldi	r25, 0x96	; 150
 45e:	bb 27       	eor	r27, r27
 460:	93 95       	inc	r25
 462:	f6 95       	lsr	r31
 464:	87 95       	ror	r24
 466:	77 95       	ror	r23
 468:	67 95       	ror	r22
 46a:	b7 95       	ror	r27
 46c:	f1 11       	cpse	r31, r1
 46e:	f8 cf       	rjmp	.-16     	; 0x460 <__floatsisf+0x1c>
 470:	fa f4       	brpl	.+62     	; 0x4b0 <__floatsisf+0x6c>
 472:	bb 0f       	add	r27, r27
 474:	11 f4       	brne	.+4      	; 0x47a <__floatsisf+0x36>
 476:	60 ff       	sbrs	r22, 0
 478:	1b c0       	rjmp	.+54     	; 0x4b0 <__floatsisf+0x6c>
 47a:	6f 5f       	subi	r22, 0xFF	; 255
 47c:	7f 4f       	sbci	r23, 0xFF	; 255
 47e:	8f 4f       	sbci	r24, 0xFF	; 255
 480:	9f 4f       	sbci	r25, 0xFF	; 255
 482:	16 c0       	rjmp	.+44     	; 0x4b0 <__floatsisf+0x6c>
 484:	88 23       	and	r24, r24
 486:	11 f0       	breq	.+4      	; 0x48c <__floatsisf+0x48>
 488:	96 e9       	ldi	r25, 0x96	; 150
 48a:	11 c0       	rjmp	.+34     	; 0x4ae <__floatsisf+0x6a>
 48c:	77 23       	and	r23, r23
 48e:	21 f0       	breq	.+8      	; 0x498 <__floatsisf+0x54>
 490:	9e e8       	ldi	r25, 0x8E	; 142
 492:	87 2f       	mov	r24, r23
 494:	76 2f       	mov	r23, r22
 496:	05 c0       	rjmp	.+10     	; 0x4a2 <__floatsisf+0x5e>
 498:	66 23       	and	r22, r22
 49a:	71 f0       	breq	.+28     	; 0x4b8 <__floatsisf+0x74>
 49c:	96 e8       	ldi	r25, 0x86	; 134
 49e:	86 2f       	mov	r24, r22
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	60 e0       	ldi	r22, 0x00	; 0
 4a4:	2a f0       	brmi	.+10     	; 0x4b0 <__floatsisf+0x6c>
 4a6:	9a 95       	dec	r25
 4a8:	66 0f       	add	r22, r22
 4aa:	77 1f       	adc	r23, r23
 4ac:	88 1f       	adc	r24, r24
 4ae:	da f7       	brpl	.-10     	; 0x4a6 <__floatsisf+0x62>
 4b0:	88 0f       	add	r24, r24
 4b2:	96 95       	lsr	r25
 4b4:	87 95       	ror	r24
 4b6:	97 f9       	bld	r25, 7
 4b8:	08 95       	ret

000004ba <__fp_inf>:
 4ba:	97 f9       	bld	r25, 7
 4bc:	9f 67       	ori	r25, 0x7F	; 127
 4be:	80 e8       	ldi	r24, 0x80	; 128
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	60 e0       	ldi	r22, 0x00	; 0
 4c4:	08 95       	ret

000004c6 <__fp_nan>:
 4c6:	9f ef       	ldi	r25, 0xFF	; 255
 4c8:	80 ec       	ldi	r24, 0xC0	; 192
 4ca:	08 95       	ret

000004cc <__fp_pscA>:
 4cc:	00 24       	eor	r0, r0
 4ce:	0a 94       	dec	r0
 4d0:	16 16       	cp	r1, r22
 4d2:	17 06       	cpc	r1, r23
 4d4:	18 06       	cpc	r1, r24
 4d6:	09 06       	cpc	r0, r25
 4d8:	08 95       	ret

000004da <__fp_pscB>:
 4da:	00 24       	eor	r0, r0
 4dc:	0a 94       	dec	r0
 4de:	12 16       	cp	r1, r18
 4e0:	13 06       	cpc	r1, r19
 4e2:	14 06       	cpc	r1, r20
 4e4:	05 06       	cpc	r0, r21
 4e6:	08 95       	ret

000004e8 <__fp_round>:
 4e8:	09 2e       	mov	r0, r25
 4ea:	03 94       	inc	r0
 4ec:	00 0c       	add	r0, r0
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <__fp_round+0xc>
 4f0:	88 23       	and	r24, r24
 4f2:	52 f0       	brmi	.+20     	; 0x508 <__fp_round+0x20>
 4f4:	bb 0f       	add	r27, r27
 4f6:	40 f4       	brcc	.+16     	; 0x508 <__fp_round+0x20>
 4f8:	bf 2b       	or	r27, r31
 4fa:	11 f4       	brne	.+4      	; 0x500 <__fp_round+0x18>
 4fc:	60 ff       	sbrs	r22, 0
 4fe:	04 c0       	rjmp	.+8      	; 0x508 <__fp_round+0x20>
 500:	6f 5f       	subi	r22, 0xFF	; 255
 502:	7f 4f       	sbci	r23, 0xFF	; 255
 504:	8f 4f       	sbci	r24, 0xFF	; 255
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	08 95       	ret

0000050a <__fp_split3>:
 50a:	57 fd       	sbrc	r21, 7
 50c:	90 58       	subi	r25, 0x80	; 128
 50e:	44 0f       	add	r20, r20
 510:	55 1f       	adc	r21, r21
 512:	59 f0       	breq	.+22     	; 0x52a <__fp_splitA+0x10>
 514:	5f 3f       	cpi	r21, 0xFF	; 255
 516:	71 f0       	breq	.+28     	; 0x534 <__fp_splitA+0x1a>
 518:	47 95       	ror	r20

0000051a <__fp_splitA>:
 51a:	88 0f       	add	r24, r24
 51c:	97 fb       	bst	r25, 7
 51e:	99 1f       	adc	r25, r25
 520:	61 f0       	breq	.+24     	; 0x53a <__fp_splitA+0x20>
 522:	9f 3f       	cpi	r25, 0xFF	; 255
 524:	79 f0       	breq	.+30     	; 0x544 <__fp_splitA+0x2a>
 526:	87 95       	ror	r24
 528:	08 95       	ret
 52a:	12 16       	cp	r1, r18
 52c:	13 06       	cpc	r1, r19
 52e:	14 06       	cpc	r1, r20
 530:	55 1f       	adc	r21, r21
 532:	f2 cf       	rjmp	.-28     	; 0x518 <__fp_split3+0xe>
 534:	46 95       	lsr	r20
 536:	f1 df       	rcall	.-30     	; 0x51a <__fp_splitA>
 538:	08 c0       	rjmp	.+16     	; 0x54a <__fp_splitA+0x30>
 53a:	16 16       	cp	r1, r22
 53c:	17 06       	cpc	r1, r23
 53e:	18 06       	cpc	r1, r24
 540:	99 1f       	adc	r25, r25
 542:	f1 cf       	rjmp	.-30     	; 0x526 <__fp_splitA+0xc>
 544:	86 95       	lsr	r24
 546:	71 05       	cpc	r23, r1
 548:	61 05       	cpc	r22, r1
 54a:	08 94       	sec
 54c:	08 95       	ret

0000054e <__fp_zero>:
 54e:	e8 94       	clt

00000550 <__fp_szero>:
 550:	bb 27       	eor	r27, r27
 552:	66 27       	eor	r22, r22
 554:	77 27       	eor	r23, r23
 556:	cb 01       	movw	r24, r22
 558:	97 f9       	bld	r25, 7
 55a:	08 95       	ret

0000055c <__mulsf3>:
 55c:	0e 94 c1 02 	call	0x582	; 0x582 <__mulsf3x>
 560:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_round>
 564:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fp_pscA>
 568:	38 f0       	brcs	.+14     	; 0x578 <__mulsf3+0x1c>
 56a:	0e 94 6d 02 	call	0x4da	; 0x4da <__fp_pscB>
 56e:	20 f0       	brcs	.+8      	; 0x578 <__mulsf3+0x1c>
 570:	95 23       	and	r25, r21
 572:	11 f0       	breq	.+4      	; 0x578 <__mulsf3+0x1c>
 574:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_inf>
 578:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_nan>
 57c:	11 24       	eor	r1, r1
 57e:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_szero>

00000582 <__mulsf3x>:
 582:	0e 94 85 02 	call	0x50a	; 0x50a <__fp_split3>
 586:	70 f3       	brcs	.-36     	; 0x564 <__mulsf3+0x8>

00000588 <__mulsf3_pse>:
 588:	95 9f       	mul	r25, r21
 58a:	c1 f3       	breq	.-16     	; 0x57c <__mulsf3+0x20>
 58c:	95 0f       	add	r25, r21
 58e:	50 e0       	ldi	r21, 0x00	; 0
 590:	55 1f       	adc	r21, r21
 592:	62 9f       	mul	r22, r18
 594:	f0 01       	movw	r30, r0
 596:	72 9f       	mul	r23, r18
 598:	bb 27       	eor	r27, r27
 59a:	f0 0d       	add	r31, r0
 59c:	b1 1d       	adc	r27, r1
 59e:	63 9f       	mul	r22, r19
 5a0:	aa 27       	eor	r26, r26
 5a2:	f0 0d       	add	r31, r0
 5a4:	b1 1d       	adc	r27, r1
 5a6:	aa 1f       	adc	r26, r26
 5a8:	64 9f       	mul	r22, r20
 5aa:	66 27       	eor	r22, r22
 5ac:	b0 0d       	add	r27, r0
 5ae:	a1 1d       	adc	r26, r1
 5b0:	66 1f       	adc	r22, r22
 5b2:	82 9f       	mul	r24, r18
 5b4:	22 27       	eor	r18, r18
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	62 1f       	adc	r22, r18
 5bc:	73 9f       	mul	r23, r19
 5be:	b0 0d       	add	r27, r0
 5c0:	a1 1d       	adc	r26, r1
 5c2:	62 1f       	adc	r22, r18
 5c4:	83 9f       	mul	r24, r19
 5c6:	a0 0d       	add	r26, r0
 5c8:	61 1d       	adc	r22, r1
 5ca:	22 1f       	adc	r18, r18
 5cc:	74 9f       	mul	r23, r20
 5ce:	33 27       	eor	r19, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	23 1f       	adc	r18, r19
 5d6:	84 9f       	mul	r24, r20
 5d8:	60 0d       	add	r22, r0
 5da:	21 1d       	adc	r18, r1
 5dc:	82 2f       	mov	r24, r18
 5de:	76 2f       	mov	r23, r22
 5e0:	6a 2f       	mov	r22, r26
 5e2:	11 24       	eor	r1, r1
 5e4:	9f 57       	subi	r25, 0x7F	; 127
 5e6:	50 40       	sbci	r21, 0x00	; 0
 5e8:	9a f0       	brmi	.+38     	; 0x610 <__mulsf3_pse+0x88>
 5ea:	f1 f0       	breq	.+60     	; 0x628 <__mulsf3_pse+0xa0>
 5ec:	88 23       	and	r24, r24
 5ee:	4a f0       	brmi	.+18     	; 0x602 <__mulsf3_pse+0x7a>
 5f0:	ee 0f       	add	r30, r30
 5f2:	ff 1f       	adc	r31, r31
 5f4:	bb 1f       	adc	r27, r27
 5f6:	66 1f       	adc	r22, r22
 5f8:	77 1f       	adc	r23, r23
 5fa:	88 1f       	adc	r24, r24
 5fc:	91 50       	subi	r25, 0x01	; 1
 5fe:	50 40       	sbci	r21, 0x00	; 0
 600:	a9 f7       	brne	.-22     	; 0x5ec <__mulsf3_pse+0x64>
 602:	9e 3f       	cpi	r25, 0xFE	; 254
 604:	51 05       	cpc	r21, r1
 606:	80 f0       	brcs	.+32     	; 0x628 <__mulsf3_pse+0xa0>
 608:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_inf>
 60c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_szero>
 610:	5f 3f       	cpi	r21, 0xFF	; 255
 612:	e4 f3       	brlt	.-8      	; 0x60c <__mulsf3_pse+0x84>
 614:	98 3e       	cpi	r25, 0xE8	; 232
 616:	d4 f3       	brlt	.-12     	; 0x60c <__mulsf3_pse+0x84>
 618:	86 95       	lsr	r24
 61a:	77 95       	ror	r23
 61c:	67 95       	ror	r22
 61e:	b7 95       	ror	r27
 620:	f7 95       	ror	r31
 622:	e7 95       	ror	r30
 624:	9f 5f       	subi	r25, 0xFF	; 255
 626:	c1 f7       	brne	.-16     	; 0x618 <__mulsf3_pse+0x90>
 628:	fe 2b       	or	r31, r30
 62a:	88 0f       	add	r24, r24
 62c:	91 1d       	adc	r25, r1
 62e:	96 95       	lsr	r25
 630:	87 95       	ror	r24
 632:	97 f9       	bld	r25, 7
 634:	08 95       	ret

00000636 <_exit>:
 636:	f8 94       	cli

00000638 <__stop_program>:
 638:	ff cf       	rjmp	.-2      	; 0x638 <__stop_program>
